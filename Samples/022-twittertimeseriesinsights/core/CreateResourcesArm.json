{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sqlServerUsername": {
            "metadata": {
                "description": "SQL server admin username"
            },
            "type": "string"
        },
        "sqlServerPassword": {
            "metadata": {
                "description": "SQL server admin password"
            },
            "type": "securestring"
        },
        "webServiceApiUrl": {
            "type": "string"
        },
        "webServiceApiKey": {
            "type": "string"
        },
        "transformQuery": {
            "type": "string"
        }
    },

    "variables": {
        "sqlVersion": "2014-04-01",
        "sqlServerName": "[concat(variables('uniqueNamePrefix'),'srv')]",
        "sqlDatabaseName": "[concat(variables('uniqueNamePrefix'),'db')]",
        "sqlServerUsername": "[parameters('sqlServerUsername')]",
        "sqlServerVersion": "12.0",
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255",
        "edition": "Standard",
        "databaseTier": "S0",
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": "2147483648",
        "sqlServerResourceId": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "namePrefix": "[resourceGroup().name]",
        "uniqueNamePrefix": "[toLower(concat(resourceGroup().name, uniqueString(subscription().subscriptionId)))]",
        "location": "[resourceGroup().location]",
        "stgVersion": "2015-06-15",
        "storageAccountType": "Standard_GRS",
        "storageAccountName": "[variables('uniqueNamePrefix')]",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "sbVersion": "2014-09-01",
        "sbNameIngest": "[concat(variables('uniqueNamePrefix'), 'servicebusingest')]",
        "sbNameProcess": "[concat(variables('uniqueNamePrefix'), 'servicebusprocess')]",
        "sbKeyName": "RootManageSharedAccessKey",
        "sbResourceIdIngest": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('sbNameIngest'), variables('sbKeyName'))]",
        "sbResourceIdProcess": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('sbNameProcess'), variables('sbKeyName'))]",
        "saJobName": "[concat(variables('namePrefix'), 'sajob')]",
        "saVersion": "2015-06-01",
        "ehInNameIngest": "[concat(variables('namePrefix'), 'ehiningest')]",
        "ehInNameProcess": "[concat(variables('namePrefix'), 'ehinprocess')]",
        "ehSendPolicyKeyName": "SendPolicy",
        "ehSendPolicyResourceIdIngest": "[resourceId('Microsoft.EventHub/namespaces/eventHubs/authorizationRules', variables('sbNameIngest'), variables('ehInNameIngest'), variables('ehSendPolicyKeyName'))]",
        "ehResourceIdIngest": "[concat(concat(concat('Microsoft.Eventhub/namespaces/', variables('sbNameIngest')), '/eventHubs/'), variables('ehInNameIngest'))]",
        "ehSendPolicyNameIngest": "[concat(variables('sbNameIngest'), concat('/', concat(variables('ehInNameIngest'), concat('/', variables('ehSendPolicyKeyName')))))]",
        "ehSendPolicyResourceIdProcess": "[resourceId('Microsoft.EventHub/namespaces/eventHubs/authorizationRules', variables('sbNameProcess'), variables('ehInNameProcess'), variables('ehSendPolicyKeyName'))]",
        "ehResourceIdProcess": "[concat(concat(concat('Microsoft.Eventhub/namespaces/', variables('sbNameProcess')), '/eventHubs/'), variables('ehInNameProcess'))]",
        "ehSendPolicyNameProcess": "[concat(variables('sbNameIngest'), concat('/', concat(variables('ehInNameProcess'), concat('/', variables('ehSendPolicyKeyName')))))]",
        "consumerGroupName": "[concat(variables('namePrefix'), 'timeseriestweets')]",
        "sfVersion": "2016-03-01",
        "environmentName": "[concat(variables('uniqueNamePrefix'), 'tsienv')]",
        "environmentSkuName": "S1",
        "environmentSkuCapacity": 1,
        "environmentDataRetentionTime": "P30D",
        "environmentDisplayName": "[concat(variables('namePrefix'), 'StreamingTweets')]",
        "eventSourceName": "[concat(variables('uniqueNamePrefix'), 'eventsource')]",
        "eventSourceDisplayName": "Twitter Time Series Insights",
        "eventHubResourceId": "[variables('sbResourceIdProcess')]",
        "eventHubServiceBusNamespace": "[variables('sbNameProcess')]",
        "eventHubName": "[variables('ehInNameProcess')]",
        "eventHubConsumerGroupName": "[variables('consumerGroupName')]",
        "eventHubKeyName": "[variables('sbKeyName')]",
        "eventHubSharedAccessKey": "[variables('ehSendPolicyResourceIdProcess')]",
        "accessPolicyName": "user",
        "accessPolicyPrincipalObjectId": "notsure",
        "accessPolicyRole": "Contributor",
        "environmentTagsOptions": [
            null,
            {
                "displayName": "[variables('environmentDisplayName')]"
            }
        ],
        "environmentTagsValue": "[variables('environmentTagsOptions')[length(take(variables('environmentDisplayName'), 1))]]",
        "eventSourceTagsOptions": [
            null,
            {
                "displayName": "[variables('eventSourceDisplayName')]"
            }
        ],
        "eventSourceTagsValue": "[variables('eventSourceTagsOptions')[length(take(variables('eventSourceDisplayName'), 1))]]"
    },
    "resources": [{
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[variables('location')]",
            "apiVersion": "[variables('stgVersion')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
        "name": "[variables('sqlServerName')]",
        "type": "Microsoft.Sql/servers",
        "location": "[variables('location')]",
        "apiVersion": "[variables('sqlVersion')]",
        "properties": {
            "administratorLogin": "[parameters('sqlServerUsername')]",
            "administratorLoginPassword": "[parameters('sqlServerPassword')]",
            "version": "[variables('sqlServerVersion')]"
        },
        "resources": [{
            "name": "[variables('sqlDatabaseName')]",
            "type": "databases",
            "location": "[variables('location')]",
            "apiVersion": "[variables('sqlVersion')]",
            "dependsOn": [
                "[variables('sqlServerResourceId')]"
            ],
            "properties": {
                "edition": "[variables('edition')]",
                "requestedServiceObjectiveName": "[variables('databaseTier')]",
                "collation": "[variables('collation')]",
                "maxSizeBytes": "[variables('maxSizeBytes')]"
            }
        }, {
            "apiVersion": "[variables('sqlVersion')]",
            "type": "firewallrules",
            "location": "[variables('location')]",
            "name": "AllowAllWindowsAzureIps",
            "dependsOn": [
                "[variables('sqlServerResourceId')]"
            ],
            "properties": {
                "startIpAddress": "[variables('startIpAddress')]",
                "endIpAddress": "[variables('endIpAddress')]"
            }
        }]
    }, {
        "apiVersion": "[variables('sbVersion')]",
        "name": "[variables('sbNameIngest')]",
        "type": "Microsoft.Eventhub/namespaces",
        "location": "[variables('location')]",
        "properties": {
            "region": "[variables('location')]"
        },
        "resources": [{
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('ehInNameIngest')]",
            "type": "eventHubs",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Eventhub/namespaces/', variables('sbNameIngest'))]"
            ],
            "properties": {
                "path": "[variables('ehInNameIngest')]"
            },
            "resources": [{
                "apiVersion": "2015-08-01",
                "name": "[variables('ehSendPolicyKeyName')]",
                "type": "authorizationRules",
                "location": "[variables('location')]",
                "dependsOn": [
                    "[variables('ehResourceIdIngest')]"
                ],
                "properties": {
                    "rights": [
                        "Send",
                        "Listen"
                    ]
                }
            }]
        }]
    }, {
        "apiVersion": "[variables('sbVersion')]",
        "name": "[variables('sbNameProcess')]",
        "type": "Microsoft.Eventhub/namespaces",
        "location": "[variables('location')]",
        "properties": {
            "region": "[variables('location')]"
        },
        "resources": [{
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('ehInNameProcess')]",
            "type": "EventHubs",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Eventhub/namespaces/', variables('sbNameProcess'))]"
            ],
            "properties": {
                "path": "[variables('ehInNameProcess')]"
            },
            "resources": [{
                "apiVersion": "2015-08-01",
                "name": "[variables('consumerGroupName')]",
                "type": "ConsumerGroups",
                "location": "[variables('location')]",
                "dependsOn": [
                    "[concat('Microsoft.EventHub/namespaces/', variables('sbNameProcess'),'/eventhubs/',variables('ehInNameProcess'))]"
                ],
                "properties": {}
            }, {
                "apiVersion": "2015-08-01",
                "name": "[variables('ehSendPolicyKeyName')]",
                "type": "authorizationRules",
                "location": "[variables('location')]",
                "dependsOn": [
                    "[variables('ehResourceIdProcess')]"
                ],
                "properties": {
                    "rights": [
                        "Send",
                        "Listen",
                        "Manage"
                    ]
                }
            }]
        }]
    },{
        "apiVersion": "[variables('saVersion')]",
        "type": "Microsoft.StreamAnalytics/streamingjobs",
        "name": "[variables('saJobName')]",
        "location": "[variables('location')]",
        "properties": {
            "sku": {
                "name": "standard"
            },
            "EventsOutOfOrderMaxDelayInSeconds": 10,
            "EventsOutOfOrderPolicy": "adjust",
            "Inputs": [{
                "Name": "TwitterStream",
                "Properties": {
                    "DataSource": {
                        "Properties": {
                            "ConsumerGroupName": "",
                            "EventHubName": "[variables('ehInNameIngest')]",
                            "ServiceBusNamespace": "[variables('sbNameIngest')]",
                            "SharedAccessPolicyKey": "[listkeys(variables('sbResourceIdIngest'), variables('sbVersion')).primaryKey]",
                            "SharedAccessPolicyName": "[variables('sbKeyName')]"
                        },
                        "Type": "Microsoft.ServiceBus/EventHub"
                    },
                    "Serialization": {
                        "Properties": {
                            "Encoding": "UTF8"
                        },
                        "Type": "Json"
                    },
                    "Type": "Stream"
                }
            }],
            "Outputs": [{
                "Name": "SQLOutput",
                "Properties": {
                    "DataSource": {
                        "Properties": {
                            "Database": "[variables('sqlDatabaseName')]",
                            "Password": "[parameters('sqlServerPassword')]",
                            "Server": "[variables('sqlServerName')]",
                            "Table": "TweetScore",
                            "User": "[parameters('sqlServerUsername')]"
                        },
                        "Type": "Microsoft.Sql/Server/Database"
                    }
                }
            },
            {
            "Name": "ehProcessOutput",
            "Properties": {
              "Type": "stream",
              "Serialization": {
                "Type": "JSON",
                "Properties": { "encoding": "UTF8" }
              },
              "DataSource": {
                "Type": "Microsoft.ServiceBus/EventHub",
                "Properties": {
                  "EventHubName": "[variables('ehInNameProcess')]",
                  "ServiceBusNamespace": "[variables('sbNameProcess')]",
                  "SharedAccessPolicyName": "[variables('sbKeyName')]",
                  "SharedAccessPolicyKey": "[listkeys(variables('sbResourceIdProcess'), variables('sbVersion')).primaryKey]"
                }
              }
            }
          },
          {
                "Name": "StorageOutput",
                "Properties": {
                    "DataSource": {
                        "Properties": {
                            "Container": "twitterRows",
                            "DateFormat": "yyyy/MM/dd",
                            "TimeFormat": "HH",
                            "PathPattern": "Output/logs/{date}/{time}",
                            "StorageAccounts": [
                                        {
                                            "AccountKey": "[listkeys(variables('storageId'), variables('stgVersion')).key1]",
                                            "AccountName": "[variables('storageAccountName')]"
                                        }
                                    ]
                                },
                            "Type": "Microsoft.Storage/Blob"
                        },
                            "Serialization": {
                                "Properties": {
                                    "fieldDelimiter": ",",
                                    "Encoding": "UTF8"
                                },
                                "Type": "JSON"
                            }
                        }
                    }
            ],
            "Transformation": {
                "Name": "AllToSqlDb",
                "Properties": {
                    "Query": "[parameters('transformQuery')]",
                    "StreamingUnits": 1
                }
            },
            "functions": [{
                "name": "sentiment",
                "type": "Microsoft.StreamAnalytics/streamingjobs/functions",
                "properties": {
                    "type": "Scalar",
                    "properties": {
                        "inputs": [{
                            "dataType": "nvarchar(max)",
                            "isConfigurationParameter": null
                        }],
                        "output": {
                            "dataType": "record"
                        },
                        "binding": {
                            "type": "Microsoft.MachineLearning/WebService",
                            "properties": {
                                "endpoint": "[concat(parameters('webServiceApiUrl'), '/execute?api-version=2.0&details=true')]",
                                "apiKey": "[parameters('webServiceApiKey')]",
                                "inputs": {
                                    "name": "input1",
                                    "columnNames": [{
                                        "name": "tweet_text",
                                        "dataType": "string",
                                        "mapTo": 0
                                    }]
                                },
                                "outputs": [{
                                    "name": "Sentiment",
                                    "dataType": "string"
                                }, {
                                    "name": "Score",
                                    "dataType": "double"
                                }],
                                "batchSize": 1000
                            }
                        }
                    }
                }
            }]
        }
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments",
      "name": "[variables('environmentName')]",
      "apiVersion": "2017-02-28-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "dataRetentionTime": "[variables('environmentDataRetentionTime')]"
      },
      "sku": {
        "name": "[variables('environmentSkuName')]",
        "capacity": "[variables('environmentSkuCapacity')]"
      },
      "tags": "[variables('environmentTagsValue')]",
      "resources": [
        {
          "type": "eventsources",
          "name": "[variables('eventSourceName')]",
          "apiVersion": "2017-02-28-preview",
          "location": "[resourceGroup().location]",
          "kind": "Microsoft.EventHub",
          "properties": {
            "eventSourceResourceId": "[variables('eventHubResourceId')]",
            "serviceBusNamespace": "[variables('eventHubServiceBusNamespace')]",
            "eventHubName": "[variables('eventHubName')]",
            "consumerGroupName": "[variables('eventHubConsumerGroupName')]",
            "keyName": "[variables('eventHubKeyName')]",
            "sharedAccessKey": "[listkeys(variables('sbResourceIdProcess'), variables('sbVersion')).primaryKey]"
          },
          "tags": "[variables('eventSourceTagsValue')]",
          "dependsOn": [
            "[concat('Microsoft.TimeSeriesInsights/environments/', variables('environmentName'))]"
          ]
        }
      ]
    }],
    "outputs": {
        "ehNameIngest": {
            "type": "string",
            "value": "[variables('ehInNameIngest')]"
        },
        "eventHubConnectionStringIngest": {
            "type": "string",
            "value": "[listkeys(variables('ehSendPolicyResourceIdIngest'), variables('sbVersion')).primaryConnectionString]"
        },
        "ehNameProcess": {
            "type": "string",
            "value": "[variables('ehInNameProcess')]"
        },
        "eventHubConnectionStringProcess": {
            "type": "string",
            "value": "[listkeys(variables('ehSendPolicyResourceIdProcess'), variables('sbVersion')).primaryConnectionString]"
        },
        "saName": {
            "type": "string",
            "value": "[variables('saJobName')]"
        },
        "sqlServerName": {
            "type": "string",
            "value": "[variables('sqlServerName')]"
        },
        "sqlDatabaseName": {
            "type": "string",
            "value": "[variables('sqlDatabaseName')]"
        },
        "sqlServerUsername": {
            "type": "string",
            "value": "[variables('sqlServerUsername')]"
        },
        "sqlConnectionString": {
            "type": "string",
            "value": "[concat('Server=tcp:',variables('sqlServerName'),'.database.windows.net,1433;Database=',variables('sqlDatabaseName'),';User ID=',parameters('sqlServerUsername'),';Password=',parameters('sqlServerPassword'),';Trusted_Connection=False;Encrypt=True;Connection Timeout=30')]"
        },
        "dataAccessId" : {
            "value" : "[reference(resourceId('Microsoft.TimeSeriesInsights/environments', variables('environmentName'))).dataAccessId]",
             "type": "string"
        },
        "dataAccessPaneUrl": { "type": "string", "value": "[concat('https://portal.azure.com/#resource/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.TimeSeriesInsights/environments/', variables('environmentName'),'/access')]" },
        "tsiOverviewUrl": { "type": "string", "value": "[concat('https://portal.azure.com/#resource/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.TimeSeriesInsights/environments/', variables('environmentName'),'/overview')]" }
    }
}